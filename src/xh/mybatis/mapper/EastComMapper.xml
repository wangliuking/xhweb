<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.EastComMapper">

	<!-- 基站信道排队top5 -->
	<select id="queueTop5" resultType="map" useCache="true"
		parameterType="String">
		select TotalActiveCalls as value,bsId from
		pef_newbstotal where
		starttime>=#{time} and (bsId&lt;=200 or
		bsId>1200)
		GROUP BY bsid
		order by TotalActiveCalls desc limit 5
	</select>
	<!-- 基站信道排队top5 -->
	<select id="queueTopBsName" resultType="map" useCache="true"
		parameterType="List">
		select name,bsId from xhgmnet_bs_station where bsId in(
		<foreach collection="list" item="id" separator=",">
			#{id}
		</foreach>
		)
	</select>
	<delete id="del_data" parameterType="String">
	delete FROM pef_newbstotal WHERE starttime &lt;#{time};
	</delete>

	<!-- 定时获取东信基站呼叫统计数据 -->
	<select id="get_bs_now_call_data" parameterType="String"
		resultType="xh.mybatis.bean.EastBsCallDataBean">

		select
		TotalActiveCalls,
		TotalActiveCallDuration,
		AverageCallDuration,
		PTTCount,
		QueueCount,
		QueueDuration,
		MaxUserRegCount,
		MaxGroupRegCount,
		MaxControlChanUpRate,
		MinControlChanUpRate,
		AvgControlChanUpRate,
		MaxControlChanDownRate,
		AvgTrafficChanRate,
		MinControlChanDownRate,
		AvgControlChanDownRate,
		case
		when bsid>1200 then bsid%1000
		else bsid end as bsid,
		starttime,
		endtime,
		mscid from
		pef_newbstotal
		where
		starttime=#{time} and (bsid&lt;=200 or
		bsid>=1000)

	</select>

	<!-- 定时获取东信基站呼叫统计数据 -->
	<select id="get_bs_call_data" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">

		select * from
		pef_newbstotal
		where
		starttime=DATE_SUB(#{time},INTERVAL #{day} DAY)

	</select>
	<!-- 定时获取东信交换中心呼叫统计数据 -->
	<select id="get_msc_call_data" parameterType="map"
		resultType="xh.mybatis.bean.EastMscCallBean">

		select * from
		pef_newmsctotal
		where
		DATE_FORMAT(starttime,'%Y-%m-%d')=DATE_SUB(#{time},INTERVAL #{day}
		DAY)

	</select>
	<!-- 定时获取东信交换中心detail呼叫统计数据 -->
	<select id="get_msc_call_detail_data" parameterType="map"
		resultType="xh.mybatis.bean.EastMscCallDetailBean">

		select * from
		pef_newmscdetail
		where
		DATE_FORMAT(starttime,'%Y-%m-%d')=DATE_SUB(#{time},INTERVAL #{day}
		DAY)

	</select>
	<!-- 定时获取东信vpn呼叫统计数据 -->
	<select id="get_vpn_call_data" parameterType="map"
		resultType="xh.mybatis.bean.EastVpnCallBean">
		select * from
		pef_newvpntotal
		where
		DATE_FORMAT(starttime,'%Y-%m-%d')=DATE_SUB(#{time},INTERVAL #{day}
		DAY)

	</select>
	<!--写入东信基站呼叫统计数据 -->
	<insert id="write_bs_call_data" parameterType="java.util.List">
		replace into pef_newbstotal(TotalActiveCalls,
		TotalActiveCallDuration,
		AverageCallDuration,
		PTTCount,
		QueueCount,
		QueueDuration,
		MaxUserRegCount,
		MaxGroupRegCount,
		MaxControlChanUpRate,
		MinControlChanUpRate,
		AvgControlChanUpRate,
		MaxControlChanDownRate,
		AvgTrafficChanRate,
		MinControlChanDownRate,
		AvgControlChanDownRate,
		bsid,
		starttime,
		endtime,
		mscid
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.TotalActiveCalls},
			#{item.TotalActiveCallDuration},
			#{item.AverageCallDuration},
			#{item.PTTCount},
			#{item.QueueCount},
			#{item.QueueDuration},
			#{item.MaxUserRegCount},
			#{item.MaxGroupRegCount},
			#{item.MaxControlChanUpRate},
			#{item.MinControlChanUpRate},
			#{item.AvgControlChanUpRate},
			#{item.MaxControlChanDownRate},
			#{item.AvgTrafficChanRate},
			#{item.MinControlChanDownRate},
			#{item.AvgControlChanDownRate},
			#{item.bsid},
			#{item.starttime},
			#{item.endtime},
			#{item.mscid}
			)
		</foreach>
	</insert>
	<!--写入东信基站呼叫统计数据 -->
	<insert id="write_bs_now_call_data" parameterType="java.util.List">
		replace into pef_newbstotal_now(TotalActiveCalls,
		TotalActiveCallDuration,
		AverageCallDuration,
		PTTCount,
		QueueCount,
		QueueDuration,
		MaxUserRegCount,
		MaxGroupRegCount,
		MaxControlChanUpRate,
		MinControlChanUpRate,
		AvgControlChanUpRate,
		MaxControlChanDownRate,
		AvgTrafficChanRate,
		MinControlChanDownRate,
		AvgControlChanDownRate,
		bsid,
		starttime,
		endtime,
		mscid
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.TotalActiveCalls},
			#{item.TotalActiveCallDuration},
			#{item.AverageCallDuration},
			#{item.PTTCount},
			#{item.QueueCount},
			#{item.QueueDuration},
			#{item.MaxUserRegCount},
			#{item.MaxGroupRegCount},
			#{item.MaxControlChanUpRate},
			#{item.MinControlChanUpRate},
			#{item.AvgControlChanUpRate},
			#{item.MaxControlChanDownRate},
			#{item.AvgTrafficChanRate},
			#{item.MinControlChanDownRate},
			#{item.AvgControlChanDownRate},
			#{item.bsid},
			#{item.starttime},
			#{item.endtime},
			#{item.mscid}
			)
		</foreach>
	</insert>
	<!--写入东信交换中心呼叫统计数据 -->
	<insert id="write_msc_call_data" parameterType="java.util.List">
		replace into pef_newmsctotal(TotalActiveCall,
		TotalActiveCallDuration,
		AverageCallDuration,
		TotalCalls,
		TotalFailedCalls,
		FailedPercentage,
		NoEffectCalls,
		starttime,
		endtime,
		mscid,
		totalPTTs,
		totalQueueCount,
		totalQueueDuration,
		totalMaxReg,
		maxRegGroup
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.TotalActiveCall},
			#{item.TotalActiveCallDuration},
			#{item.AverageCallDuration},
			#{item.TotalCalls},
			#{item.TotalFailedCalls},
			#{item.FailedPercentage},
			#{item.NoEffectCalls},
			#{item.starttime},
			#{item.endtime},
			#{item.mscid},
			#{item.totalPTTs},
			#{item.totalQueueCount},
			#{item.totalQueueDuration},
			#{item.totalMaxReg},
			#{item.maxRegGroup}
			)
		</foreach>
	</insert>
	<!--写入东信交换中心detail呼叫统计数据 -->
	<insert id="write_msc_call_detail_data" parameterType="java.util.List">
		replace into pef_newmscdetail(
		GroupCalls,
		GroupCallDuration,
		PrivateCalls,
		PrivateCallDuration,
		PhoneCalls,
		PhoneCallDuration,
		EmergencyCalls,
		EmergencyCallDuration,
		PrivateDuplexCalls,
		PrivateSimplexCalls,
		mscid,
		starttime,
		endtime
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.GroupCalls},
			#{item.GroupCallDuration},
			#{item.PrivateCalls},
			#{item.PrivateCallDuration},
			#{item.PhoneCalls},
			#{item.PhoneCallDuration},
			#{item.EmergencyCalls},
			#{item.EmergencyCallDuration},
			#{item.PrivateDuplexCalls},
			#{item.PrivateSimplexCalls},
			#{item.mscid},
			#{item.starttime},
			#{item.endtime}
			)
		</foreach>
	</insert>
	<!--写入东信vpn呼叫统计数据 -->
	<insert id="write_vpn_call_data" parameterType="java.util.List">
		replace into pef_newvpntotal(
		TotalActiveCalls,
		TotalActiveCallDuration,
		AverageCallDuration,
		dexTotalCalls,
		TotalFailedCalls,
		FailedPercentage,
		NoEffectCalls,
		vpnid,
		starttime,
		endtime
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.TotalActiveCalls},
			#{item.TotalActiveCallDuration},
			#{item.AverageCallDuration},
			#{item.dexTotalCalls},
			#{item.TotalFailedCalls},
			#{item.FailedPercentage},
			#{item.NoEffectCalls},
			#{item.vpnid},
			#{item.starttime},
			#{item.endtime}
			)
		</foreach>
	</insert>

	<!-- 基站话务统计数据 -->
	<select id="chart_bs_call" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">
		SELECT T1.*, T2.call_sort, T3.user_sort, T4.queue_sort
		FROM ( select x.*,y.`name`,y.`level`,y.area,y.zone
		from (select bsid, sum(TotalActiveCalls) AS TotalActiveCalls,
		sum(TotalActiveCallDuration) AS TotalActiveCallDuration,
		round(avg(AverageCallDuration), 0) AS AverageCallDuration,
		sum(PTTCount) AS PTTCount,
		sum(QueueCount) AS QueueCount,
		sum(QueueDuration) AS QueueDuration,
		max(MaxUserRegCount) AS MaxUserRegCount,
		max(MaxGroupRegCount) AS MaxGroupRegCount from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		where 
       <if test="type==1">
            starttime between #{time} and #{endtime}
        </if>
        <if test="type==2">
            starttime=#{time}
        </if>
        <if test="type==3">
            starttime=#{time}
        </if>
        <if test="type==4">
            date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
            #{endtime}
        </if>
         GROUP BY bsid) as x
		left join xhgmnet.xhgmnet_bs_station as y on x.bsid=y.bsId ) AS T1


		LEFT JOIN ( SELECT a.bsid, CASE WHEN @rowtotal = a.TotalActiveCalls THEN
		@rownum WHEN @rowtotal := a.TotalActiveCalls THEN @rownum :=@rownum +
		1 WHEN @rowtotal = 0
		THEN @rownum :=@rownum + 1 END AS call_sort FROM ( SELECT bsid,
		sum(TotalActiveCalls) AS TotalActiveCalls FROM 
		<if test="type==1">
            chart_day_bstotal
        </if>
        <if test="type==2">
            chart_week_bstotal
        </if>
        <if test="type==3">
            chart_month_bstotal
        </if>
        <if test="type==4">
            chart_hour_bstotal
        </if>
		WHERE
		<if test="type==1">
            starttime between #{time} and #{endtime}
        </if>
        <if test="type==2">
            starttime=#{time}
        </if>
        <if test="type==3">
            starttime=#{time}
        </if>
        <if test="type==4">
            date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
            #{endtime}
        </if>
         GROUP BY bsid ORDER
		BY TotalActiveCalls DESC ) AS a,
		( SELECT @rownum := 0 ,@rowtotal := NULL ) r ) AS T2 ON T1.bsid =
		T2.bsid


		LEFT JOIN ( SELECT a.bsid, CASE WHEN @rowtotal1 = a.MaxUserRegCount THEN
		@rownum1
		WHEN @rowtotal1 := a.MaxUserRegCount THEN @rownum1 :=@rownum1 + 1 WHEN
		@rowtotal1 = 0 THEN @rownum1 :=@rownum1 + 1 END AS user_sort
		FROM ( SELECT bsid, max(MaxUserRegCount) as MaxUserRegCount FROM
		<if test="type==1">
            chart_day_bstotal
        </if>
        <if test="type==2">
            chart_week_bstotal
        </if>
        <if test="type==3">
            chart_month_bstotal
        </if>
        <if test="type==4">
            chart_hour_bstotal
        </if>
         WHERE
		<if test="type==1">
            starttime between #{time} and #{endtime}
        </if>
        <if test="type==2">
            starttime=#{time}
        </if>
        <if test="type==3">
            starttime=#{time}
        </if>
        <if test="type==4">
            date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
            #{endtime}
        </if>
         GROUP BY bsid ORDER
		BY MaxUserRegCount DESC ) AS a,
		( SELECT @rownum1 := 0 ,@rowtotal1 := NULL ) r ) AS T3 ON T1.bsid =
		T3.bsid




		LEFT JOIN ( SELECT a.bsid, CASE WHEN @rowtotal2 = a.QueueCount THEN
		@rownum2 WHEN @rowtotal2 := a.QueueCount THEN @rownum2 :=@rownum2 + 1
		WHEN @rowtotal2 = 0 THEN @rownum2 :=@rownum2 + 1 END AS queue_sort
		FROM ( SELECT bsid, sum(QueueCount) AS QueueCount FROM
		<if test="type==1">
            chart_day_bstotal
        </if>
        <if test="type==2">
            chart_week_bstotal
        </if>
        <if test="type==3">
            chart_month_bstotal
        </if>
        <if test="type==4">
            chart_hour_bstotal
        </if>
		WHERE 
		<if test="type==1">
            starttime between #{time} and #{endtime}
        </if>
        <if test="type==2">
            starttime=#{time}
        </if>
        <if test="type==3">
            starttime=#{time}
        </if>
        <if test="type==4">
            date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
            #{endtime}
        </if>
         GROUP BY bsid ORDER BY QueueCount DESC ) AS a,
		( SELECT @rownum2 := 0 ,@rowtotal2 := NULL ) r ) AS T4 ON T1.bsId =
		T4.bsid ORDER BY T1.bsid ASC





	</select>
	<select id="chart_ds_call" parameterType="map" resultType="xh.mybatis.bean.EastDsCallBean">
	select a.dstId,a.dstName,b.totalActiveCalls,b.averageCallDuration,b.totalActiveCallDuration,b.dsid from xhgmnet.xhgmnet_dispatch as a 
	left join (select dsid,
	    sum(totalActiveCalls) AS totalActiveCalls,
		sum(totalActiveCallDuration) AS totalActiveCallDuration,
		round(avg(averageCallDuration), 0) AS averageCallDuration from 
		<if test="type==1">
		    xhgmnet_gps_voice.chart_day_dstotal where 1=1
			and begintime between #{time} and
			#{endtime}
		</if>
		<if test="type==2">
		   xhgmnet_gps_voice.chart_month_dstotal where 1=1
			and begintime = #{time}
		</if>
		 GROUP BY dsid) as b on a.dstId=b.dsid where a.flag=1 ORDER BY a.dstId ASC
	</select>
	<select id="chart_vpn_group_call" parameterType="map" resultType="xh.mybatis.bean.EastGroupCallBean">
	select a.TalkgroupID as groupid,a.E_name as name,b.TotalActiveCalls,b.TotalActiveCallDuration,b.AverageCallDuration

    from (select TalkgroupID,E_name from xhgmnet.xhgmnet_talkgroup WHERE E_vpnId=2 AND time>=DATE_SUB(now(),INTERVAL 2 DAY)) as a 
	left join (select groupid,
	    sum(TotalActiveCalls) AS TotalActiveCalls,
		sum(TotalActiveCallDuration) AS TotalActiveCallDuration,
		round(avg(AverageCallDuration), 0) AS AverageCallDuration from 
		<if test="type==1">
		    xhgmnet_gps_voice.chart_day_groupcall where 1=1 
			and starttime between #{time} and
			#{endtime}
		</if>
		<if test="type==2">
		    xhgmnet_gps_voice.chart_month_groupcall where 1=1
			and starttime = #{time}
		</if>
		 GROUP BY groupid) as b on a.TalkgroupID=b.groupid ORDER BY a.TalkgroupID ASC
		 <if test="start!=null and limit !=null">
		 limit #{start},#{limit}
		 </if>
	</select>
	<select id="chart_vpn_group_call_count" resultType="int">
	select count(*) from xhgmnet.xhgmnet_talkgroup WHERE E_vpnId=2 AND time>=DATE_SUB(now(),INTERVAL 2 DAY)
	</select>
	<!-- 虚拟专网话务统计数据 -->
	<select id="chart_vpn_call" parameterType="map"
		resultType="xh.mybatis.bean.EastVpnCallBean">
		SELECT
		x.vpnId,
		x.`name`,
		y.TotalActiveCalls,
		y.TotalActiveCallDuration,
		y.AverageCallDuration,
		y.dexTotalCalls,
		y.TotalFailedCalls,
		y.FailedPercentage,
		y.NoEffectCalls

		FROM
		xhgmnet_vpn AS x
		LEFT JOIN (
		SELECT
		vpnid,
		sum(TotalActiveCalls) AS TotalActiveCalls,
		sum(TotalActiveCallDuration) AS TotalActiveCallDuration,
		round(avg(AverageCallDuration), 0) AS AverageCallDuration,
		sum(dexTotalCalls) AS dexTotalCalls,
		sum(TotalFailedCalls) AS
		TotalFailedCalls,
		FailedPercentage,
		sum(NoEffectCalls) AS NoEffectCalls
		FROM
		<if test="type==1">
			xhgmnet_gps_voice.chart_day_vpntotal where starttime
			between #{time} and #{endtime}
		</if>
		<if test="type==2">
			xhgmnet_gps_voice.chart_week_vpntotal where
			starttime=#{time}
		</if>
		<if test="type==3">
			xhgmnet_gps_voice.chart_month_vpntotal where
			starttime=#{time}
		</if>
		<if test="type==4">
			xhgmnet_gps_voice.pef_newvpntotal where
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		group by vpnid) AS y ON x.vpnId = y.vpnid where 1=1
		<if test="vpnid!=null and vpnid!=''">
		and x.vpnid=#{vpnid}
		</if>
		ORDER BY
		x.vpnid ASC

	</select>
	<!--基站级别话务统计数据 -->
	<select id="chart_bs_level_call" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">
		select
		y.`level`,
		count(x.bsid) as bsTotals,
		sum(x.TotalActiveCalls) as
		TotalActiveCalls,
		round((sum(x.TotalActiveCallDuration)/60),0) as
		TotalActiveCallDuration,
		round(avg(x.AverageCallDuration),0) as
		AverageCallDuration,
		sum(x.PTTCount) as PTTCount,
		sum(x.QueueCount) as
		QueueCount,
		sum(x.QueueDuration) as QueueDuration,
		max(x.MaxUserRegCount) as MaxUserRegCount,
		max(x.MaxGroupRegCount) as
		MaxGroupRegCount
		from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		as x left join
		xhgmnet.xhgmnet_bs_station as y on
		x.bsid=y.bsId
		where

		<if test="type==1">
			x.starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			x.starttime=#{time}
		</if>
		<if test="type==3">
			x.starttime=#{time}
		</if>
		<if test="type==4">
			date_format(x.starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		and y.level>0 group by y.`level` order by y.level
		asc

	</select>
	<!--基站地域话务统计数据 -->
	<select id="chart_bs_area_call" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">
		select
		y.area,
		count(x.bsid) as bsTotals,
		sum(x.TotalActiveCalls) as
		TotalActiveCalls,
		round((sum(x.TotalActiveCallDuration)/10),0) as
		TotalActiveCallDuration,
		round(avg(x.AverageCallDuration),0) as
		AverageCallDuration,
		sum(x.PTTCount) as PTTCount,
		sum(x.QueueCount) as
		QueueCount,
		sum(x.QueueDuration) as QueueDuration,
		max(x.MaxUserRegCount) as MaxUserRegCount,
		max(x.MaxGroupRegCount) as
		MaxGroupRegCount
		from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		as x left join
		xhgmnet.xhgmnet_bs_station as y on
		x.bsid=y.bsId
		where
		<if test="type==1">
			x.starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			x.starttime=#{time}
		</if>
		<if test="type==3">
			x.starttime=#{time}
		</if>
		<if test="type==4">
			date_format(x.starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		and y.area is not null group by y.area
	</select>
	<!--基站区域话务统计数据 -->
	<select id="chart_bs_zone_call" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">
		select
		y.zone,
		count(x.bsid) as bsTotals,
		sum(x.TotalActiveCalls) as
		TotalActiveCalls,
		sum(x.TotalActiveCallDuration) as
		TotalActiveCallDuration,
		round(avg(x.AverageCallDuration),0) as
		AverageCallDuration,
		sum(x.PTTCount) as PTTCount,
		sum(x.QueueCount) as
		QueueCount,
		sum(x.QueueDuration) as QueueDuration,
		max(x.MaxUserRegCount) as
		MaxUserRegCount,
		max(x.MaxGroupRegCount) as
		MaxGroupRegCount
		from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		as x left join xhgmnet.xhgmnet_bs_station as y on
		x.bsid=y.bsId
		where
		<if test="type==1">
			x.starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			x.starttime=#{time}
		</if>
		<if test="type==3">
			x.starttime=#{time}
		</if>
		<if test="type==4">
			date_format(x.starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		and y.zone is not null and
		y.zone !='移动基站' group by
		y.zone order by zone
		asc
	</select>
	<!--基站区域话务TOP统计数据 -->
	<select id="chart_bs_zone_top10_call" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">
		select
		count(x.bsid) as bsTotals,
		sum(x.TotalActiveCalls) as
		TotalActiveCalls,
		sum(x.TotalActiveCallDuration) as
		TotalActiveCallDuration,
		round(avg(x.AverageCallDuration),0) as
		AverageCallDuration,
		sum(x.PTTCount) as PTTCount,
		sum(x.QueueCount) as
		QueueCount,
		sum(x.QueueDuration) as QueueDuration,
		max(x.MaxUserRegCount) as
		MaxUserRegCount,
		max(x.MaxGroupRegCount) as
		MaxGroupRegCount,y.zone,
		ROUND(sum(x.TotalActiveCalls)/x.totals*100,2)
		as percent,
		x.starttime

		from (select
		T1.bsid,
		T1.TotalActiveCalls,
		T1.TotalActiveCallDuration,
		T1.AverageCallDuration,
		T1.PTTCount,
		T1.QueueCount,
		T1.QueueDuration,
		T1.MaxUserRegCount,
		T1.MaxGroupRegCount,
		T2.totals,
		T1.starttime
		from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		as
		T1,(
		select sum(totals) as
		totals from (
		select
		sum(a.TotalActiveCalls)
		as totals,b.zone from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		as a
		left join
		xhgmnet.xhgmnet_bs_station as b on
		a.bsid=b.bsId
		where
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		group by zone
		) as e) as T2

		) as x

		left join
		xhgmnet.xhgmnet_bs_station as
		y on
		x.bsid=y.bsId
		where
		<if test="type==1">
			x.starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			x.starttime=#{time}
		</if>
		<if test="type==3">
			x.starttime=#{time}
		</if>
		<if test="type==4">
			date_format(x.starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		group by y.zone order by
		TotalActiveCalls desc
		limit 10






	</select>
	<!-- 基站话务TOP10 -->
	<select id="chart_bs_call_top10" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">
		select x.*,y.`name`,y.`level`,y.area,y.zone from
		(select
		a.*,ROUND(a.TotalActiveCalls/b.totals*100,2) as percent,b.totals from
		(select bsid,
		sum(TotalActiveCalls) AS TotalActiveCalls,
		sum(TotalActiveCallDuration) AS TotalActiveCallDuration,
		round(avg(AverageCallDuration), 0) AS AverageCallDuration,
		sum(PTTCount) AS PTTCount,
		sum(QueueCount) AS QueueCount,
		sum(QueueDuration) AS QueueDuration,
		max(MaxUserRegCount) AS
		MaxUserRegCount,
		max(MaxGroupRegCount) AS MaxGroupRegCount,
		starttime
		from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		where
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		GROUP BY bsid) as a,(select sum(TotalActiveCalls) as totals from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		WHERE
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		) as b) as x

		left join xhgmnet.xhgmnet_bs_station as y on x.bsid=y.bsId
		order by TotalActiveCalls desc limit 10
	</select>
	<!-- 基站话务最大注册用户TOP10 -->
	<select id="chart_bs_userreg_top10" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">

		select x.*, y.`name`,y.`level`,y.area,y.zone FROM (SELECT
		bsid,
		sum(TotalActiveCalls) AS TotalActiveCalls,
		sum(TotalActiveCallDuration) AS TotalActiveCallDuration,
		round(avg(AverageCallDuration), 0) AS AverageCallDuration,
		sum(PTTCount) AS PTTCount,
		sum(QueueCount) AS QueueCount,
		sum(QueueDuration) AS QueueDuration,
		max(MaxUserRegCount) AS
		MaxUserRegCount,
		max(MaxGroupRegCount) AS MaxGroupRegCount

		from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		where
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		GROUP BY bsid) as x

		left join xhgmnet.xhgmnet_bs_station as y on
		x.bsid=y.bsId order by
		x.MaxUserRegCount desc limit 10



	</select>
	<!-- 基站话务排队TOP10 -->
	<select id="chart_bs_queue_top10" parameterType="map"
		resultType="xh.mybatis.bean.EastBsCallDataBean">

		select x.*,y.`name`,y.`level`,y.area,y.zone
		from (select
		a.*,ROUND(a.QueueCount/b.totals*100,2) as percent from
		(select bsid,
		sum(TotalActiveCalls) AS TotalActiveCalls,
		sum(TotalActiveCallDuration) AS TotalActiveCallDuration,
		round(avg(AverageCallDuration), 0) AS AverageCallDuration,
		sum(PTTCount) AS PTTCount,
		sum(QueueCount) AS QueueCount,
		sum(QueueDuration) AS QueueDuration,
		max(MaxUserRegCount) AS
		MaxUserRegCount,
		max(MaxGroupRegCount) AS MaxGroupRegCount from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		where
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		GROUP BY bsid) as a,
		(select sum(QueueCount) as totals
		from
		<if test="type==1">
			chart_day_bstotal
		</if>
		<if test="type==2">
			chart_week_bstotal
		</if>
		<if test="type==3">
			chart_month_bstotal
		</if>
		<if test="type==4">
			chart_hour_bstotal
		</if>
		where
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		) as b) as x

		left join xhgmnet.xhgmnet_bs_station as y on x.bsid=y.bsId
		order by
		QueueCount desc limit 10


	</select>
	<!-- 虚拟专网话务TOP10 -->
	<select id="chart_vpn_call_top10" parameterType="map"
		resultType="xh.mybatis.bean.EastVpnCallBean">
		SELECT
		x.*, y.`name`
		FROM
		(
		SELECT
		a.*, ROUND(
		a.TotalActiveCalls / b.totals
		* 100,
		2
		) AS percent
		FROM
		(
		SELECT
		T1.vpnid,
		sum(T1.TotalActiveCalls) AS
		TotalActiveCalls,
		sum(T1.TotalActiveCallDuration) AS
		TotalActiveCallDuration,
		round(
		avg(T1.AverageCallDuration),
		0
		) AS
		AverageCallDuration,
		sum(T1.dexTotalCalls) AS dexTotalCalls,
		sum(T1.TotalFailedCalls) AS TotalFailedCalls,
		T1.FailedPercentage,
		sum(T1.NoEffectCalls) AS NoEffectCalls,
		T1.starttime
		FROM
		<if test="type==1">
			chart_day_vpntotal
		</if>
		<if test="type==2">
			chart_week_vpntotal
		</if>
		<if test="type==3">
			chart_month_vpntotal
		</if>
		<if test="type==4">
			pef_newvpntotal
		</if>
		AS T1
		WHERE
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		GROUP BY
		vpnid
		) AS a,
		(
		SELECT
		sum(TotalActiveCalls) AS totals
		FROM
		<if test="type==1">
			chart_day_vpntotal
		</if>
		<if test="type==2">
			chart_week_vpntotal
		</if>
		<if test="type==3">
			chart_month_vpntotal
		</if>
		<if test="type==4">
			pef_newvpntotal
		</if>
		WHERE
		<if test="type==1">
			starttime between #{time} and #{endtime}
		</if>
		<if test="type==2">
			starttime=#{time}
		</if>
		<if test="type==3">
			starttime=#{time}
		</if>
		<if test="type==4">
			date_format(starttime,'%Y-%m-%d %H:00:00') between #{time} and
			#{endtime}
		</if>
		) AS b
		) AS x
		LEFT JOIN xhgmnet.xhgmnet_vpn AS y ON x.vpnid = y.vpnId
		ORDER BY
		x.TotalActiveCalls DESC
		LIMIT 10



	</select>

	<!--交换中心日报话务统计数据 -->
	<select id="chart_msc_call" parameterType="map"
		resultType="xh.mybatis.bean.EastMscDayBean">
		select * from chart_day_msc where starttime=#{time} limit 1
	</select>
	<!--交换中心日报话务统计数据 -->
	<select id="chart_month_msc" parameterType="map"
		resultType="xh.mybatis.bean.EastMscDayBean">
		select
		sum(TotalActiveCall) AS TotalActiveCall,
		sum(TotalActiveCallDuration) AS TotalActiveCallDuration,
		round(avg(AverageCallDuration), 0) AS AverageCallDuration,
		sum(TotalCalls) AS TotalCalls,
		sum(TotalFailedCalls) AS
		TotalFailedCalls,
		sum(NoEffectCalls) AS NoEffectCalls,
		DATE_FORMAT(starttime, '%Y-%m-%d') AS starttime,
		mscid,
		sum(totalPTTs)
		as totalPTTs,
		sum(totalQueueCount) as totalQueueCount,
		sum(totalQueueDuration) as totalQueueDuration,
		max(totalMaxReg) as
		totalMaxReg,
		max(maxRegGroup) as maxRegGroup,

		round((sum(TotalFailedCalls)/sum(TotalCalls)),0) as FailedPercentage


		from
		<if test="type==1">
			chart_day_msc where starttime between #{time} and
			#{endtime}
		</if>
		<if test="type==2">
			chart_week_msc where starttime=#{time}
		</if>
		<if test="type==3">
			chart_month_msc where starttime=#{time}
		</if>
		<if test="type==4">
			pef_newmsctotal where date_format(starttime,'%Y-%m-%d %H:00:00')
			between #{time} and
			#{endtime}
		</if>

		limit 1
	</select>

</mapper>


<!-- -->
